services:
  app:
    build: .
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - DB_NAME=civilization_database
      - DEBUG=True
      - ENVIRONMENT=development
    depends_on:
      - mongodb
    networks:
      - civilization-api-network
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_DATABASE=civilization_database
    networks:
      - civilization-api-network
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD:-password}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - civilization-api-network

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - civilization-api-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - civilization-api-network
    restart: unless-stopped
    profiles:
      - production

networks:
  civilization-api-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: